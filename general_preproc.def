# Generated by Neurodocker and Reproenv.

Bootstrap: docker
From: ubuntu:20.04

%environment
export AFNIPATH=/opt/afni-AFNI_22.3.03
export AFNI_PLUGINPATH="$AFNIPATH"
export templateloc=/usr/share/afni/atlases
export AFNI_AUTOGZIP=YES
export AFNI_COMPRESSOR=GZIP
export ANTSPATH="/opt/ants-2.4.2/bin"
export ANTSSCRIPTS="/opt/ants-2.4.2/Scripts"
export C3DPATH="/opt/convert3d-1.0.0"
export FSLDIR="/opt/fsl-6.0.5.2"
export FSLOUTPUTTYPE="NIFTI_GZ"
export FSLMULTIFILEQUIT="TRUE"
export FSLTCLSH="$FSLDIR/bin/fsltclsh"
export FSLWISH="$FSLDIR/bin/fslwish"
export FSLLOCKDIR=""
export FSLMACHINELIST=""
export FSLREMOTECALL=""
export FSLGECUDAQ="cuda.q"
export MRTRIXPATH="/opt/mrtrix3-3.0.2/bin"
export DEBIAN_FRONTEND=noninteractive
export TZ=Europe/Brussels
export R_LIBS="/opt/R"
export LD_LIBRARY_PATH="/opt/ants-2.4.2/lib:/opt/mrtrix3-3.0.2/lib:$LD_LIBRARY_PATH"
export PATH="$AFNIPATH:$ANTSPATH:$ANTSSCRIPTS:$C3DPATH/bin:$FSLDIR/bin:$MRTRIXPATH:$PATH"

%post
# Set install variables, create tmp folder
export TMPDIR="/tmp/general_preproc_build_$( date -u +"%F_%H-%M-%S" )"
[[ -d ${TMPDIR} ]] && rm -rf ${TMPDIR}
mkdir -p ${TMPDIR}
export DEBIAN_FRONTEND=noninteractive
export TZ=Europe/Brussels
apt update -qq
apt install -y -q --no-install-recommends ca-certificates dirmngr gnupg
# Prepare repos and install dependencies
apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C9A7585B49D51698710F3A115E25F516B04C661B
apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 6E12762B81063D17BDDD3142F142A4D99F16EB04
echo "deb https://ppa.launchpadcontent.net/marutter/rrutter4.0/ubuntu focal main" | tee -a /etc/apt/sources.list
echo "deb-src https://ppa.launchpadcontent.net/marutter/rrutter4.0/ubuntu focal main" | tee -a /etc/apt/sources.list
echo "deb https://ppa.launchpadcontent.net/c2d4u.team/c2d4u4.0+/ubuntu focal main" | tee -a /etc/apt/sources.list
echo "deb-src https://ppa.launchpadcontent.net/c2d4u.team/c2d4u4.0+/ubuntu focal main" | tee -a /etc/apt/sources.list
apt update -qq
apt install -y -q --no-install-recommends \
    bc \
    build-essential \
    bzip2 \
    cmake \
    curl \
    dc \
    file \
    freeglut3-dev \
    g++ \
    gcc \
    git \
    less \
    libeigen3-dev \
    libf2c2-dev \
    libfftw3-3 \
    libfftw3-dev \
    libglew-dev \
    libgl1-mesa-dev \
    libgl1-mesa-dri \
    libgl1-mesa-glx \
    libglib2.0-dev \
    libglu1-mesa-dev \
    libgomp1 \
    libgsl-dev \
    libgts-dev \
    libjpeg8-dev \
    liblapack3 \
    libmotif-dev \
    libnetpbm10-dev \
    libpng16-16 \
    libpng-dev \
    libquadmath0 \
    libtiff5 \
    libtiff5-dev \
    libxext-dev \
    libxi-dev \
    libxmhtml-dev \
    libxmu-dev \
    libxmu-headers \
    libxpm-dev \
    libxt-dev \
    m4 \
    make \
    mesa-common-dev \
    nano \
    r-base-dev \
    rsync \
    tcsh \
    python3-distutils \
    python3-pip \
    python3-rpy2 \
    python-is-python3 \
    qhull-bin \
    xvfb \
    zlib1g-dev
# Install AFNI
mkdir -p ${TMPDIR}/afni
ln -s /usr/lib/x86_64-linux-gnu/libgsl.so.23 /usr/lib/x86_64-linux-gnu/libgsl.so.19
cd ${TMPDIR}/afni || exit 1
curl -O https://afni.nimh.nih.gov/pub/dist/bin/misc/@update.afni.binaries
tcsh @update.afni.binaries -package linux_ubuntu_16_64 -apsearch yes -bindir /opt/afni-AFNI_22.3.03
/opt/afni-AFNI_22.3.03/rPkgsInstall -pkgs ALL
cd ${TMPDIR} || exit 1
rm -rf ${TMPDIR}/afni
# Install ANTs
mkdir -p ${TMPDIR}/ants/build
git clone https://github.com/ANTsX/ANTs.git ${TMPDIR}/ants/source
cd ${TMPDIR}/ants/source || exit 1
git fetch --tags
git -c advice.detachedHead=false checkout v2.4.2
cd ${TMPDIR}/ants/build || exit 1
cmake -DCMAKE_INSTALL_PREFIX=/opt/ants-2.4.2 -DBUILD_SHARED_LIBS=ON -DBUILD_TESTING=OFF ${TMPDIR}/ants/source
make -j4
mkdir -p /opt/ants-2.4.2
cd ANTS-build || exit 1
make install
mv ../../source/Scripts/ /opt/ants-2.4.2
cd ${TMPDIR} || exit 1
rm -rf ${TMPDIR}/ants
# Install C3D
echo "Downloading Convert3D ..."
mkdir -p /opt/convert3d-1.0.0
curl -fsSL https://sourceforge.net/projects/c3d/files/c3d/1.0.0/c3d-1.0.0-Linux-x86_64.tar.gz/download \
| tar -xz -C /opt/convert3d-1.0.0 --strip-components 1
# Install FSL
mkdir -p ${TMPDIR}/fsl
cd ${TMPDIR}/fsl || exit 1
curl -fL https://fsl.fmrib.ox.ac.uk/fsldownloads/fslinstaller.py --output ./fslinstaller.py
chmod +x fslinstaller.py
python3 fslinstaller.py -d /opt/fsl-6.0.5.2 -V 6.0.5.2
# echo "Installing FSL conda environment ..."
# bash /opt/fsl-6.0.5.2/etc/fslconf/fslpython_install.sh -f /opt/fsl-6.0.5.2
cd ${TMPDIR} || exit 1
rm -rf ${TMPDIR}/fsl
# Install MRtrix3
echo "Downloading MRtrix3 ..."
mkdir -p /opt/mrtrix3-3.0.2
git clone https://github.com/MRtrix3/mrtrix3.git ${TMPDIR}/mrtrix3
cd ${TMPDIR}/mrtrix3 || exit 1
git fetch --tags
git -c advice.detachedHead=false checkout 3.0.3
./configure -nogui
NUMBER_OF_PROCESSORS=4 ./build
mv bin lib share /opt/mrtrix3-3.0.2/.
cd ${TMPDIR} || exit 1
rm -rf ${TMPDIR}/mrtrix3
# Install PYTHON things, mainly NIGSP!
pip3 install \
    certifi==2022.9.24 \
    charset-normalizer==2.1.1 \
    citeproc-py==0.6.0 \
    contourpy==1.0.5 \
    cycler==0.11.0 \
    duecredit==0.9.1 \
    fonttools==4.37.4 \
    future==0.18.2 \
    h5py==3.7.0 \
    idna==3.4 \
    joblib==1.2.0 \
    kiwisolver==1.4.4 \
    lxml==4.9.1 \
    matplotlib==3.6.1 \
    nibabel==4.0.2 \
    nilearn==0.9.2 \
    numpy==1.22.4 \
    packaging==21.3 \
    pandas==1.5.0 \
    Pillow==9.2.0 \
    pymatreader==0.0.30 \
    pyparsing==3.0.9 \
    python-dateutil==2.8.2 \
    pytz==2022.5 \
    requests==2.28.1 \
    scikit-learn==1.1.2 \
    scipy==1.9.2 \
    six==1.16.0 \
    threadpoolctl==3.1.0 \
    urllib3==1.26.12 \
    xmltodict==0.13.0 \
    nigsp[all]
# Final removal of lists and cleanup
cd /tmp || exit 1
rm -rf ${TMPDIR}
rm -rf /var/lib/apt/lists/*